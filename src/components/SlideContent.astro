---
const { title, description } = Astro.props

const anim = {
  old: {
    name: "bump-out",
    duration: ".3s",
  },
  new: {
    name: "bump-in",
    duration: ".7s",
    easing: "var(--ease-bs-spring)",
  },
}

const customTransition = {
  forwards: anim,
  backwards: anim,
}
---

<section class="grid">

  {
    title && <h1 class="bs-h1 relative z-30 bg-gradient-to-r from-blue-500 to-teal-400 bg-clip-text min-h-[1.1lh] text-transparent" set:html={ title } transition:animate={ customTransition } />
  }

  {
    description && <p class="description bs-body-text relative z-30 [&_a]:text-sky-500 font-semibold" set:html={ description } />
  }

  <div class="content text-xl text-bs-foreground-dark mt-1 text-balance [&_a]:text-sky-500 font-semibold">

    <slot name="content" />

  </div>

</section>


<!-- Sound -->
<audio src="/drop.mp3" hidden class="js-sound" />

<script>

  document.addEventListener("astro:page-load", () => {

    const animating = document.querySelectorAll('img, svg, video')
    const soundFx = document.querySelector('.js-sound')

    animating.forEach(thing => thing.addEventListener('animationstart', () =>  soundFx.play() ))

  })

</script>

<style is:global>

@import "tailwindcss";
@reference "../assets/css/global.css";

@keyframes bump-in {
  0% {
    transform: translateY(200px);
    opacity: 0;
  }
  100% {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes bump-out {
  0% {
    transform: translateY(0);
    opacity: 1;
  }
  100% {
    opacity: 0;
    transform: translateY(200px);
  }
}

.content:empty { display: none;}
.content pre,
.content code { @apply text-violet-500 font-semibold text-sm }
.content strong { @apply text-bs-foreground-light }

@keyframes fade-in {

  0% {
    opacity: 0;
    translate: 0 200px
  }

  100% {
    opacity: 1;
    translate: 0 0
  }

}

.content video {
  max-width: none;
  opacity: 0;
  animation-name: fade-in;
  animation-duration: 1s;
  animation-iteration-count: once;
  animation-fill-mode: forwards;
  animation-timing-function: var(--ease-bs-spring);
  animation-delay: .5s;
}

.content img,
.content svg  {
  max-width: none;
  opacity: 0;
  animation-name: fade-in;
  animation-duration: 1s;
  animation-iteration-count: once;
  animation-fill-mode: forwards;
  animation-timing-function: var(--ease-bs-spring);
  animation-delay: 1.5s;
}
</style>